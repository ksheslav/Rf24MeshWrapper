/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class rf24_wrapper_RF24Mesh */

#ifndef _Included_rf24_wrapper_RF24Mesh
#define _Included_rf24_wrapper_RF24Mesh
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    begin
 * Signature: (CIJ)Z
 */
JNIEXPORT jboolean JNICALL Java_rf24_wrapper_RF24Mesh_begin
  (JNIEnv *, jobject, jchar, jint, jlong);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    update
 * Signature: ()C
 */
JNIEXPORT jchar JNICALL Java_rf24_wrapper_RF24Mesh_update
  (JNIEnv *, jobject);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    write
 * Signature: (I[BCI)Z
 */
JNIEXPORT jboolean JNICALL Java_rf24_wrapper_RF24Mesh_write__I_3BCI
  (JNIEnv *, jobject, jint, jbyteArray, jchar, jint);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    write
 * Signature: ([BCII)Z
 */
JNIEXPORT jboolean JNICALL Java_rf24_wrapper_RF24Mesh_write___3BCII
  (JNIEnv *, jobject, jbyteArray, jchar, jint, jint);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    setChannel
 * Signature: (C)V
 */
JNIEXPORT void JNICALL Java_rf24_wrapper_RF24Mesh_setChannel
  (JNIEnv *, jobject, jchar);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    checkConnection
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_rf24_wrapper_RF24Mesh_checkConnection
  (JNIEnv *, jobject);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    getAddress
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_rf24_wrapper_RF24Mesh_getAddress
  (JNIEnv *, jobject, jint);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    getNodeId
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_rf24_wrapper_RF24Mesh_getNodeId
  (JNIEnv *, jobject, jstring);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    releaseAddress
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_rf24_wrapper_RF24Mesh_releaseAddress
  (JNIEnv *, jobject);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    renewAddress
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_rf24_wrapper_RF24Mesh_renewAddress
  (JNIEnv *, jobject, jlong);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    requestAddress
 * Signature: (B)Z
 */
JNIEXPORT jboolean JNICALL Java_rf24_wrapper_RF24Mesh_requestAddress
  (JNIEnv *, jobject, jbyte);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    waitForAvailable
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_rf24_wrapper_RF24Mesh_waitForAvailable
  (JNIEnv *, jobject, jlong);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    setNodeId
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_rf24_wrapper_RF24Mesh_setNodeId
  (JNIEnv *, jobject, jint);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    setStaticAddress
 * Signature: (CLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_rf24_wrapper_RF24Mesh_setStaticAddress
  (JNIEnv *, jobject, jchar, jstring);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    loadDHCP
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_rf24_wrapper_RF24Mesh_loadDHCP
  (JNIEnv *, jobject);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    saveDHCP
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_rf24_wrapper_RF24Mesh_saveDHCP
  (JNIEnv *, jobject);

/*
 * Class:     rf24_wrapper_RF24Mesh
 * Method:    DHCP
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_rf24_wrapper_RF24Mesh_DHCP
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
